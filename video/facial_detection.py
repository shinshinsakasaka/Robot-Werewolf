# -*- coding: utf-8 -*-
"""facial_detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T1O1CXt4S8o_jSSiwqx0e9MsF1bG3ocd

*   skip_frames=24 should be skip_frames=0?
*
"""

# mount drive to access the sample data
from google.colab import drive
drive.mount('/content/drive')

!pip install -q py-feat

!pip install xgboost==2.1.3 scikit-learn==1.5.2

# Creating a Detector instance
# It will take time as it requires to download the pretrained models
# You can change which models you want during initialization, e.g.
# detector = Detector(emotion_model='svm')

from feat import Detector
detector = Detector()
detector

# Session crashed after using all available RAM.
test_video_path = "drive/MyDrive/robot-werewolf/sample_data/sampledata_20241220.mp4"
video_prediction = detector.detect_video(
    test_video_path, data_type="video", skip_frames=24, face_detection_threshold=0.95
)
video_prediction.head()

test_video_path = "drive/MyDrive/robot-werewolf/sample_data/sampledata_20241220.mp4"
video_prediction = detector.detect_video(
    test_video_path, data_type="video", skip_frames=120, face_detection_threshold=0.95
)
video_prediction.head()

import pickle

with open('drive/MyDrive/robot-werewolf/sample_data/video_prediction.pkl', 'wb') as f:
    pickle.dump(video_prediction, f)

"""01/06/2025"""

import cv2

# Load the video file
video = cv2.VideoCapture("drive/MyDrive/robot-werewolf/sample_data/sampledata_20241220.mp4")

# Get the FPS
fps = video.get(cv2.CAP_PROP_FPS)

print(f"FPS: {fps}")
video.release()

"""6m7s -> 367s

The number of flips = 367 * 25 = 9175

9175 / 120(skip frames) = 76.7
"""

import pickle
with open('drive/MyDrive/robot-werewolf/sample_data/video_prediction.pkl', 'rb') as f:
    prediction_load = pickle.load(f)

print(prediction_load.head())

prediction_load.shape

"""There are three participants. 77 * 3= 231"""

# Face detection results are reported as a rectangular bounding box of the face and includes a confidence score for each detected face.
prediction_load.faceboxes

# Action Unit
prediction_load.aus

prediction_load.emotions

# Head pose detection
# Rotations from a head on view can be described in terms of rotation around the x, y, and z planes and are referred to as pitch, roll, and yaw respectively
prediction_load.poses

prediction_load.identities

# It sometimes fails to detect multiple faces. For example, for frame 240, only two faces are detected. We also do not know how one identity in one frame corresponds with the same identity in another frame.
# Maybe it is a good idea to first crop three faces and run the model separtely? Or discard frames which could not identify all of the faces. It is also possible to use faceboxes information
prediction_load.identities.head(10)

# What are the necessary information?
column_names = prediction_load.columns.tolist()
print(column_names)



